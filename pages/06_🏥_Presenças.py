import streamlit as st
import pandas as pd
import plotly.express as px
from utils.carrega_dados import carrega_dados

st.set_page_config(
    page_title='Condi√ß√µes',
    page_icon='üìà',
    layout='wide'
)

df = carrega_dados()

st.title("‚úÖ An√°lise de Comparecimento √†s Consultas")
st.markdown(f"""
Bem-vindo a esta se√ß√£o crucial! Aqui, investigamos o **comportamento de comparecimento dos pacientes √†s consultas**.
Vamos analisar a taxa geral de comparecimento e, em seguida, como o recebimento de SMS impacta essa presen√ßa.
""")

col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    st.image("assets/consulta2.jpg", width=300)

st.markdown("---")

# Mostra distribui√ß√£o para confer√™ncia
st.subheader("Distribui√ß√£o de Comparecimento")
st.write(df['Faltou a Consulta'].value_counts())

# Se√ß√£o 1: Distribui√ß√£o de Comparecimento Geral
st.subheader("üìä Taxa Geral de Comparecimento")
st.markdown(f"""
Entenda a **propor√ß√£o de pacientes que compareceram ou faltaram** √†s consultas agendadas.
""")

# Garante o tipo correto
df['Faltou a Consulta'] = df['Faltou a Consulta'].astype(str)
df['Compareceu √† Consulta'] = df['Faltou a Consulta'].map({'Sim': 'N√£o', 'N√£o': 'Sim'})

# Gr√°fico interativo com Plotly
fig1 = px.histogram(df, x='Compareceu √† Consulta', color='Compareceu √† Consulta',
                    color_discrete_sequence=px.colors.qualitative.Set2,
                    title='Quantidade de Pacientes que Compareceram √† Consulta',
                    text_auto=True)

fig1.update_layout(
    xaxis_title='Compareceu √† Consulta',
    yaxis_title='N√∫mero de Pacientes',
    showlegend=False
)

st.plotly_chart(fig1, use_container_width=True)

# Se√ß√£o 2: Impacto do SMS
st.markdown("---")
st.subheader("üì© Impacto do Recebimento de SMS no Comparecimento")
st.markdown(f"""
Este gr√°fico mostra a *rela√ß√£o entre o recebimento de SMS e o comparecimento √†s consultas*.
Veja se o envio de SMS faz diferen√ßa na presen√ßa dos pacientes.
""")

# Ajustes de colunas
df['SMS Recebido'] = df['SMS Recebido'].map({0: 'N√£o Recebeu SMS', 1: 'Recebeu SMS'})
df['Faltou a Consulta'] = df['Faltou a Consulta'].astype(str)

# Gr√°fico interativo de barras empilhadas
fig2 = px.histogram(df, x='SMS Recebido', color='Faltou a Consulta',
                    barmode='stack',
                    color_discrete_map={'Sim': 'salmon', 'N√£o': 'skyblue'},
                    title='Recebimento de SMS e Comparecimento √† Consulta',
                    text_auto=True)

fig2.update_layout(
    xaxis_title='Grupo de Pacientes',
    yaxis_title='N√∫mero de Pacientes',
    legend_title='Faltou √† Consulta'
)

st.plotly_chart(fig2, use_container_width=True)

# Rodap√© da se√ß√£o
st.markdown("""
---
Esses insights s√£o fundamentais para otimizar nossas estrat√©gias de comunica√ß√£o e gest√£o de agendamentos,
visando melhorar a taxa de comparecimento dos pacientes.
""")
